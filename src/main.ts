// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
import { Scenes, Telegraf, session } from 'telegraf' // Telegraf - –æ—Å–Ω–æ–≤–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è Telegram –±–æ—Ç–æ–≤
import * as dotenv from 'dotenv' // –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è
import { format } from 'date-fns' // –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–∞—Ç–∞–º–∏
import { ru } from 'date-fns/locale' // –†—É—Å—Å–∫–∞—è –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏—è –¥–ª—è –¥–∞—Ç
import { DataSource } from 'typeorm' // –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
import * as cron from 'node-cron' // –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–π –∑–∞–¥–∞—á
import { ReplyKeyboardMarkup } from 'telegraf/types'

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—à–∏ —Å–µ—Ä–≤–∏—Å—ã –∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
import { EmployeeService } from './services/employee.service'
import { NotificationService } from './services/notification.service'
import { addEmployeeScene } from './scenes/addEmployee'
import { mainKeyboard } from './keyboards/main'
import { showEmployeesScene } from './scenes/showEmployees'
import { updateEmployeeDaysScene } from './scenes/updateEmployeeDays'
import { MyContext } from './types/context'
import { Employee } from './entities/Employee.entity'

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ —Ñ–∞–π–ª–∞ .env
dotenv.config()

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞
if (!process.env.BOT_TOKEN) {
  throw new Error('BOT_TOKEN –Ω–µ —É–∫–∞–∑–∞–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è')
}

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º
const bot = new Telegraf<MyContext>(process.env.BOT_TOKEN)

// –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö SQLite
const AppDataSource = new DataSource({
  type: 'sqlite', // –¢–∏–ø –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
  database: 'employees.sqlite', // –ò–º—è —Ñ–∞–π–ª–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
  entities: [Employee], // –°–ø–∏—Å–æ–∫ —Å—É—â–Ω–æ—Å—Ç–µ–π (—Ç–∞–±–ª–∏—Ü)
  synchronize: true, // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å—Ö–µ–º—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
  logging: false, // –û—Ç–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ SQL –∑–∞–ø—Ä–æ—Å–æ–≤
})

// –§—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–æ—Ç–∞
const init = async () => {
  try {
    // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    await AppDataSource.initialize()
    console.log('–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞')

    // –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä—ã —Å–µ—Ä–≤–∏—Å–æ–≤
    const employeeService = new EmployeeService(AppDataSource)
    const notificationService = new NotificationService(bot, employeeService)

    // –°–æ–∑–¥–∞–µ–º —Å—Ü–µ–Ω—ã –¥–ª—è –¥–∏–∞–ª–æ–≥–æ–≤ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    const stage = new Scenes.Stage<MyContext>([addEmployeeScene, showEmployeesScene, updateEmployeeDaysScene])

    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º middleware –¥–ª—è –±–æ—Ç–∞
    bot.use(
      session({
        defaultSession: () => ({
          __scenes: {
            cursor: 0,
            step: 0,
          },
          employeeData: {},
        }),
      }),
    )

    // –î–æ–±–∞–≤–ª—è–µ–º —Å–µ—Ä–≤–∏—Å —Ä–∞–±–æ—Ç—ã —Å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º–∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç –±–æ—Ç–∞
    bot.use((ctx, next) => {
      ctx.employeeService = employeeService
      return next()
    })

    // –ü–æ–¥–∫–ª—é—á–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å—Ü–µ–Ω
    bot.use(stage.middleware())

    // –ì–ª–æ–±–∞–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –æ—Ç–º–µ–Ω—ã
    bot.command('cancel', async (ctx) => {
      await ctx.scene.leave()
      await ctx.reply('–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞', { reply_markup: mainKeyboard.reply_markup })
    })

    // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É /start
    bot.command('start', async (ctx) => {
      await ctx.reply('üå∏ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', {
        reply_markup: mainKeyboard.reply_markup,
      })
    })

    // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
    bot.command('add_employee', (ctx) => ctx.scene.enter('addEmployee'))
    bot.command('show_employees', (ctx) => ctx.scene.enter('showEmployees'))

    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    bot.hears('üë§ –î–æ–±–∞–≤–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞', (ctx) => ctx.scene.enter('addEmployee'))
    bot.hears('üìã –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤', (ctx) => ctx.scene.enter('showEmployees'))
    bot.hears('‚è∞ –ò–∑–º–µ–Ω–∏—Ç—å —Å—Ä–æ–∫–∏', (ctx) => ctx.scene.enter('updateEmployeeDays'))

    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ 09:00 –ø–æ –º–æ—Å–∫–æ–≤—Å–∫–æ–º—É –≤—Ä–µ–º–µ–Ω–∏
    cron.schedule(
      '0 9 * * *', // –ö—Ä–æ–Ω-–≤—ã—Ä–∞–∂–µ–Ω–∏–µ: –º–∏–Ω—É—Ç—ã(0) —á–∞—Å—ã(9) –¥–Ω–∏(*) –º–µ—Å—è—Ü—ã(*) –¥–Ω–∏_–Ω–µ–¥–µ–ª–∏(*)
      async () => {
        console.log('–ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:', new Date().toLocaleString('ru-RU'))
        await notificationService.checkAndSendNotifications()
      },
      {
        timezone: 'Europe/Moscow',
      },
    )

    // –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    await bot.launch()
    console.log('–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω')
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error)
    process.exit(1) // –ó–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å —Å –æ—à–∏–±–∫–æ–π
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
init()

// –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ –ø—Ä–æ—Ü–µ—Å—Å–∞
process.once('SIGINT', () => bot.stop('SIGINT'))
process.once('SIGTERM', () => bot.stop('SIGTERM'))
