import { Scenes } from 'telegraf'
import { message } from 'telegraf/filters'
import { isValidDate, isValidNumber } from '../utils/validators'
import { confirmKeyboard } from '../keyboards/main'
import { WizardContext } from '../types/context'

// –°–æ–∑–¥–∞–µ–º —Å—Ü–µ–Ω—É —Å –ø–æ—à–∞–≥–æ–≤—ã–º –¥–∏–∞–ª–æ–≥–æ–º –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
export const addEmployeeScene = new Scenes.WizardScene<WizardContext>(
  'addEmployee', // –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Å—Ü–µ–Ω—ã

  // –®–∞–≥ 1: –ó–∞–ø—Ä–æ—Å –§–ò–û —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
  async (ctx) => {
    await ctx.reply('–í–≤–µ–¥–∏—Ç–µ –§–ò–û —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞:')
    ctx.session.employeeData = {} // –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–π –æ–±—ä–µ–∫—Ç –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
    return ctx.wizard.next() // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É
  },

  // –®–∞–≥ 2: –ó–∞–ø—Ä–æ—Å –¥–∞—Ç—ã –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã
  async (ctx) => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—É—á–∏–ª–∏ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if (!ctx.message || !('text' in ctx.message)) return

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –§–ò–û –≤ —Å–µ—Å—Å–∏–∏
    ctx.session.employeeData.fullName = ctx.message.text
    await ctx.reply('–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã (—Ñ–æ—Ä–º–∞—Ç: DD.MM.YYYY):')
    return ctx.wizard.next()
  },

  // –®–∞–≥ 3: –ó–∞–ø—Ä–æ—Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –¥–Ω–µ–π –∞–¥–∞–ø—Ç–∞—Ü–∏–∏
  async (ctx) => {
    if (!ctx.message || !('text' in ctx.message)) return

    const date = ctx.message.text
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω–æ–π –¥–∞—Ç—ã
    if (!isValidDate(date)) {
      await ctx.reply('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ (DD.MM.YYYY):')
      return // –û—Å—Ç–∞–µ–º—Å—è –Ω–∞ —Ç–µ–∫—É—â–µ–º —à–∞–≥–µ –µ—Å–ª–∏ –¥–∞—Ç–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞
    }

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞—Ç—É –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã
    ctx.session.employeeData.startDate = date
    await ctx.reply('–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –∞–¥–∞–ø—Ç–∞—Ü–∏–∏ (—á–∏—Å–ª–æ):')
    return ctx.wizard.next()
  },

  // –®–∞–≥ 4: –ó–∞–ø—Ä–æ—Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –¥–Ω–µ–π –∏—Å–ø—ã—Ç–∞—Ç–µ–ª—å–Ω–æ–≥–æ —Å—Ä–æ–∫–∞
  async (ctx) => {
    if (!ctx.message || !('text' in ctx.message)) return

    const days = ctx.message.text
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–≤–µ–¥–µ–Ω–æ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ
    if (!isValidNumber(days)) {
      await ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ:')
      return
    }

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –∞–¥–∞–ø—Ç–∞—Ü–∏–∏
    ctx.session.employeeData.adaptationDays = parseInt(days)
    await ctx.reply('–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –∏—Å–ø—ã—Ç–∞—Ç–µ–ª—å–Ω–æ–≥–æ —Å—Ä–æ–∫–∞ (—á–∏—Å–ª–æ):')
    return ctx.wizard.next()
  },

  // –®–∞–≥ 5: –ü–æ–∫–∞–∑ —Å–æ–±—Ä–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –∑–∞–ø—Ä–æ—Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
  async (ctx) => {
    if (!ctx.message || !('text' in ctx.message)) return

    const days = ctx.message.text
    if (!isValidNumber(days)) {
      await ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ:')
      return
    }

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –∏—Å–ø—ã—Ç–∞—Ç–µ–ª—å–Ω–æ–≥–æ —Å—Ä–æ–∫–∞
    ctx.session.employeeData.probationDays = parseInt(days)
    const data = ctx.session.employeeData

    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∞–Ω–Ω—ã—Ö
    const message = `
–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ:
üë§ –§–ò–û: ${data.fullName}
üìÖ –î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞: ${data.startDate}
‚è≥ –î–Ω–µ–π –∞–¥–∞–ø—Ç–∞—Ü–∏–∏: ${data.adaptationDays}
üéØ –î–Ω–µ–π –∏—Å–ø—ã—Ç–∞—Ç–µ–ª—å–Ω–æ–≥–æ —Å—Ä–æ–∫–∞: ${data.probationDays}
`
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è/–æ—Ç–º–µ–Ω—ã
    await ctx.reply(message, confirmKeyboard)
    return ctx.wizard.next()
  },

  // –®–∞–≥ 6: –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
  async (ctx) => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—É—á–∏–ª–∏ callback query (–Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É)
    if (!('callback_query' in ctx.update)) return

    const action = (ctx.update.callback_query as any).data || ''
    if (action === 'confirm' && ctx.session.employeeData) {
      // –î–æ–±–∞–≤–ª—è–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –¥–∞–Ω–Ω—ã–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
      const data = {
        ...ctx.session.employeeData,
        userId: ctx.from?.id.toString() || '',
      }

      try {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑—É
        await ctx.employeeService.createEmployee(data)
        await ctx.reply('‚úÖ –°–æ—Ç—Ä—É–¥–Ω–∏–∫ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!')
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞:', error)
        await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.')
      }
    } else {
      await ctx.reply('‚ùå –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–æ')
    }

    // –í—ã—Ö–æ–¥–∏–º –∏–∑ —Å—Ü–µ–Ω—ã
    return await ctx.scene.leave()
  },
)
